<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.linitly.boot.base.dao.SysQuartzJobMapper">

    <resultMap id="BaseResultMap" type="sysQuartzJob" extends="org.linitly.boot.base.dao.BaseBeanMapper.BaseEntityMap">
        <result column="job_name" jdbcType="VARCHAR" property="jobName" />
        <result column="job_class_name" jdbcType="VARCHAR" property="jobClassName" />
        <result column="cron_expression" jdbcType="VARCHAR" property="cronExpression" />
        <result column="description" jdbcType="VARCHAR" property="description" />
        <result column="status" jdbcType="INTEGER" property="status" />
    </resultMap>

    <!-- 根据任务名称查询任务 -->
    <select id="findByJobName" parameterType="string" resultMap="BaseResultMap">
        SELECT * FROM sys_quartz_job WHERE job_name = #{jobName}
    </select>

    <select id="findById" parameterType="long" resultMap="BaseResultMap">
        SELECT * FROM sys_quartz_job WHERE id = #{id}
    </select>

    <select id="findJobs" resultMap="BaseResultMap">
        SELECT
          *
        FROM
          sys_quartz_job
        <where>
            <if test="jobName != null and jobName != ''">
                job_name LIKE CONCAT('%', #{jobName}, '%')
            </if>
            <if test="jobClassName != null and jobClassName != ''">
                AND job_class_name LIKE CONCAT('%', #{jobClassName}, '%')
            </if>
            <if test="status != null">
                AND status = #{status}
            </if>
        </where>
    </select>

    <insert id="insert" parameterType="sysQuartzJob">
        INSERT INTO sys_quartz_job (job_name, job_class_name, cron_expression, description, status)
        VALUES (#{jobName,jdbcType=VARCHAR}, #{jobClassName,jdbcType=VARCHAR},
                #{cronExpression,jdbcType=VARCHAR}, #{description,jdbcType=VARCHAR}, #{status,jdbcType=BIT})
    </insert>

    <update id="updateStatusById">
        UPDATE
          sys_quartz_job
        SET
          status = #{status}
        WHERE
          id = #{id}
    </update>

    <delete id="deleteById" parameterType="long">
        DELETE FROM sys_quartz_job WHERE id = #{id}
    </delete>

    <update id="updateById" parameterType="sysQuartzJob">
        UPDATE sys_quartz_job
        SET job_name = #{jobName,jdbcType=VARCHAR},
          job_class_name = #{jobClassName,jdbcType=VARCHAR},
          cron_expression = #{cronExpression,jdbcType=VARCHAR},
          description = #{description,jdbcType=VARCHAR},
          status = #{status,jdbcType=INTEGER}
        WHERE id = #{id,jdbcType=BIGINT}
    </update>
</mapper>